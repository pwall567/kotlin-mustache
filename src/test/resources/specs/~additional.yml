overview: |
  Additional test specific to this implementation.
tests:
  - name: Partials
    desc: Indentation can recurse
    data: { content: "X", nodes: [ { content: "Y", nodes: [] } ] }
    template: "  {{>node}}"
    partials: { node: "|\n{{content}}\n|\n{{#nodes}}\n  {{>node}}\n{{/nodes}}\n" }
    expected: "  |\n  X\n  |\n    |\n    Y\n    |\n"
  - name: Partials
    desc: Indentation in indirect recursion
    data: { content: "X", nodes: [ { content: "Y", nodes: [] } ] }
    template: "  {{>node}}"
    partials:
      node: "|\n{{content}}\n|\n{{#nodes}}\n  {{>node2}}\n{{/nodes}}\n"
      node2: "  {{>node}}"
    expected: "  |\n  X\n  |\n      |\n      Y\n      |\n"
  - name: Partials
    desc: Indentation with multiple partial
    data:
      content: "X"
      next: { content: "Y" }
    template: "  {{>node}}"
    partials:
      node: "|\n{{content}}\n|\n  {{>node2}}\n"
      node2: "|\n{{#next}}{{content}}\n{{/next}}|"
    expected: "  |\n  X\n  |\n    |\n    Y\n    |"
  - name: Special names
    desc: List values have additional fields
    data:
      list: [ "elt1", "elt2", "elt3" ]
    template: |
      {{#list}}
      {{.}} first={{first}} last={{last}} index={{index}} index1={{index1}}
      {{/list}}
    expected: |
      elt1 first=true last=false index=0 index1=1
      elt2 first=false last=false index=1 index1=2
      elt3 first=false last=true index=2 index1=3
